# Copyright The Conforma Contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: generate-vsa
  annotations:
    tekton.dev/displayName: Generate VSA
    tekton.dev/pipelines.minVersion: "0.19"
    tekton.dev/tags: ec, vsa, signature, attestation
  labels:
    app.kubernetes.io/version: "0.1"
spec:
  description: |
    Generate a Verification Summary Attestation (VSA) for container images
  params:
    - name: IMAGES
      type: string
      description: |
        Spec section of an ApplicationSnapshot resource containing components to validate
    - name: POLICY_CONFIGURATION
      type: string
      description: Policy configuration to use for validation
    - name: PUBLIC_KEY
      type: string
      description: Public key for signature verification
      default: "k8s://openshift-pipelines/public-key"
    - name: VSA_UPLOAD_URL
      type: string
      description: URL to upload VSA to transparency log
    - name: IGNORE_REKOR
      type: string
      description: Skip Rekor transparency log checks
      default: "true"
    - name: STRICT
      type: string
      description: Fail task if policy validation fails
      default: "false"
    - name: DEBUG
      type: string
      description: Enable debug output
      default: "true"
    - name: WORKERS
      type: string
      description: Number of parallel workers to use for policy evaluation
      default: "1"
  workspaces:
    - name: signing-key
      description: Workspace containing the VSA signing key secret
  stepTemplate:
    env:
      - name: HOME
        value: "/tekton/home"
  steps:
    - name: generate-vsa
      image: quay.io/conforma/cli:latest
      onError: continue  # Don't fail on policy violations
      command: [ec]
      args:
        - validate
        - image
        - "--images"
        - "$(params.IMAGES)"
        - "--policy"
        - "$(params.POLICY_CONFIGURATION)"
        - "--public-key"
        - "$(params.PUBLIC_KEY)"
        - "--ignore-rekor=$(params.IGNORE_REKOR)"
        - "--strict=$(params.STRICT)"
        - "--debug=$(params.DEBUG)"
        - "--workers"
        - "$(params.WORKERS)"
        - "--output"
        - "text"
        - "--vsa"
        - "--vsa-signing-key"
        - "$(workspaces.signing-key.path)/cosign.key"
        - "--vsa-upload"
        - "$(params.VSA_UPLOAD_URL)"
        - "--show-successes"
      computeResources:
        requests:
          cpu: 1000m
          memory: 1Gi
        limits:
          memory: 1Gi
