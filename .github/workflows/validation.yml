# Copyright The Conforma Contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: PR Validation

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

# Prevent multiple workflows from running simultaneously
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GO_VERSION: '1.24.7'
  GOSEC_VERSION: 'c9453023c4e81ebdb6dde29e22d9cd5e2285fb16' # v2.22.8

permissions:
  contents: read  # Only read access needed for validation

jobs:
  test-and-validate:
    name: Test and Validate
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: Set up Go
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('go.sum', 'tools/go.sum', 'acceptance/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: |
        go mod download
        go mod download -modfile tools/go.mod
        go mod download -modfile acceptance/go.mod

    - name: Format check
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "❌ Code is not properly formatted. Run 'make fmt'"
          gofmt -s -l .
          exit 1
        fi
        echo "✅ Code is properly formatted"

    - name: License header check
      run: |
        echo "🔍 Checking license headers..."
        go run -modfile tools/go.mod github.com/google/addlicense -check -ignore '.github/ISSUE_TEMPLATE/**' -ignore '.github/PULL_REQUEST_TEMPLATE/**' -ignore '.github/dependabot.yml' -ignore 'vendor/**' -ignore 'node_modules/**' -ignore '*.md' -ignore '*.json' -ignore 'go.mod' -ignore 'go.sum' -ignore 'LICENSE' -ignore 'ko.yaml' -ignore '.ko.yaml' -ignore '.golangci.yml' -c 'The Conforma Contributors' -s -y 2025 .

    - name: Run tests with coverage
      run: |
        go test -v -race -coverprofile=coverage.out ./...
        COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
        echo "Test coverage: $COVERAGE%"
        go tool cover -html=coverage.out -o coverage.html

    - name: Upload coverage reports
      uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
      if: always()
      with:
        files: ./coverage.out
        flags: unittests
        name: codecov-umbrella

    - name: Run linter
      uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
      with:
        version: latest
        args: --timeout=5m

    - name: Validate Kubernetes manifests
      run: |
        # Install kustomize
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
        sudo mv kustomize /usr/local/bin/
        
        # Validate base configuration
        echo "🔍 Validating base Kubernetes manifests..."
        kustomize build config/base/ > /tmp/base-manifests.yaml
        
        # Validate dev configuration
        echo "🔍 Validating dev Kubernetes manifests..."
        kustomize build config/dev/ > /tmp/dev-manifests.yaml
        
        echo "✅ Kubernetes manifests are valid"

    - name: Test container build
      run: |
        set -euo pipefail
        echo "🔍 Testing container build..."
        
        # Install ko
        go install github.com/google/ko@latest
        
        # Test build (don't push)
        KO_DOCKER_REPO=ko.local ko build --local ./cmd/launch-taskrun
        echo "✅ Container builds successfully"

    - name: Security scan with Gosec
      run: |
        set -euo pipefail
        echo "🔍 Running security scan..."
        go install github.com/securego/gosec/v2/cmd/gosec@${{ env.GOSEC_VERSION }}
        gosec -fmt sarif -out gosec.sarif -stdout -verbose=text -exclude-dir=acceptance ./...
        echo "✅ Security scan completed"

    - name: Save validation results
      if: always()
      run: |
        # Create results summary
        echo "## Validation Results" > validation-results.md
        echo "" >> validation-results.md
        
        if [ "${{ job.status }}" = "success" ]; then
          echo "✅ All validation checks passed!" >> validation-results.md
          echo "- Format check: ✅" >> validation-results.md
          echo "- License headers: ✅" >> validation-results.md
          echo "- Tests: ✅" >> validation-results.md
          echo "- Linting: ✅" >> validation-results.md
          echo "- Kubernetes manifests: ✅" >> validation-results.md
          echo "- Container build: ✅" >> validation-results.md
          echo "- Security scan: ✅" >> validation-results.md
        else
          echo "❌ Some validation checks failed!" >> validation-results.md
          echo "Please check the workflow logs for details." >> validation-results.md
        fi
        
        echo "pr_number=${{ github.event.number }}" > validation-context.txt
        echo "job_status=${{ job.status }}" >> validation-context.txt

    - name: Upload validation results
      if: always()
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: validation-results
        path: |
          validation-results.md
          validation-context.txt
        retention-days: 1
