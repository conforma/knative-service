name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: '1.24'
  QUAY_REPOSITORY: 'quay.io/conforma/knative-service'

jobs:
  test:
    name: Test and Validate
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      
    - name: Set up Go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Cache Go modules
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download dependencies
      run: go mod download
      
    - name: Run tests
      run: |
        go test -v -race -coverprofile=coverage.out ./...
        go tool cover -html=coverage.out -o coverage.html
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673 # v4.5.0
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        
    - name: Run linter
      uses: golangci/golangci-lint-action@aaa42aa0628b4ae2578232a66b541047968fac86 # v6.1.0
      with:
        version: latest
        args: --timeout=5m
        
    - name: Validate Kubernetes manifests
      run: |
        # Install kustomize
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
        sudo mv kustomize /usr/local/bin/
        
        # Validate base configuration
        echo "Validating base configuration..."
        kustomize build config/base/ > /tmp/base-output.yaml
        
        # Validate dev configuration  
        echo "Validating dev configuration..."
        kustomize build config/dev/ > /tmp/dev-output.yaml
        
        echo "‚úÖ All Kubernetes manifests are valid"
        
    - name: Security scan with Gosec
      run: |
        # Install gosec
        go install github.com/securego/gosec/v2/cmd/gosec@c9453023c4e81ebdb6dde29e22d9cd5e2285fb16 #v2.22.8
        # Run security scan
        $(go env GOPATH)/bin/gosec ./...
        
  build-and-push:
    name: Build and Push Container Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      
    - name: Set up Go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Install ko
      uses: ko-build/setup-ko@ace48d793556083a76f1e3e6068850c1f4a369aa # v0.6
      
    - name: Log in to Quay.io
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}
        
    - name: Build and push image
      env:
        KO_DOCKER_REPO: ${{ env.QUAY_REPOSITORY }}
      run: |
        # Build and push with commit SHA tag
        export IMAGE_TAG="main-$(git rev-parse --short HEAD)"
        ko build --bare --tags=$IMAGE_TAG,latest ./cmd/launch-taskrun
        
        echo "‚úÖ Image pushed to ${{ env.QUAY_REPOSITORY }}:$IMAGE_TAG"
        echo "‚úÖ Image pushed to ${{ env.QUAY_REPOSITORY }}:latest"
        
    - name: Generate SBOM
      run: |
        echo "‚úÖ SBOM automatically generated by ko"
        
    - name: Update deployment tracking
      run: |
        echo "üìù Image built from commit: $(git rev-parse HEAD)"
        echo "üìù Available at: ${{ env.QUAY_REPOSITORY }}:main-$(git rev-parse --short HEAD)"
